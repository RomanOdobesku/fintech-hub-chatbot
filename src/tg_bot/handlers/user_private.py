from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.enums.parse_mode import ParseMode
from sqlalchemy.ext.asyncio import AsyncSession
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram import Bot

from src.tg_bot.kb import reply
import src.tg_bot.bot_database.db_query as db_query

user_private_router = Router()


@user_private_router.message(Command("start"))
async def start_handler(msg: Message, session: AsyncSession) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start". –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - msg (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await msg.answer("""–ü—Ä–∏–≤–µ—Ç üëª, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–º–∞–º –≤ —Ñ–∏–Ω—Ç–µ—Ö-—Å—Ñ–µ—Ä–µ! –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏ —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!""",
                     reply_markup=reply.start_kb)
    await db_query.orm_add_user(session, msg.from_user.id, msg.from_user.first_name)


@user_private_router.message(Command("restart"))
async def restart(msg: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/restart". –í—ã–≤–æ–¥–∏—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–¥–∞/–Ω–µ—Ç".

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - msg (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await msg.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏?",
                     reply_markup=reply.restart_categories_kb)


@user_private_router.message(Command("my_categories"))
async def print_categories(msg: Message, session: AsyncSession) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/my_categories". –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - msg (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    users_id = msg.from_user.id
    cats = await db_query.orm_get_users_categories(session, users_id)
    names = [await db_query.orm_get_name_category_by_id(session, element) for element in cats]
    answer_message = "–í–∞—à —Å–ø–∏—Å–æ–∫ —Ç–µ–º:\n"
    for element in names:
        answer_message += f"- {element}\n"
    await msg.answer(answer_message)


@user_private_router.message(Command("help"))
async def help_handler(msg: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/help". –í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É –æ –±–æ—Ç–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - msg (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await msg.answer("""–¢—É—Ç –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ, –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö, –æ –¥–∞–π–¥–∂–µ—Å—Ç–µ –∏ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è""")


@user_private_router.message(Command("digest"))
async def send_news_to_subscribers(msg: Message, session: AsyncSession) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/digest". –í—ã–≤–æ–¥–∏—Ç –ø–æ 5 –Ω–µ–¥–∞–≤–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - msg (Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    users_chat_id = await db_query.orm_get_list_of_users(session)
    latest_news = await db_query.orm_get_latest_news_by_categories(session)
    category = await db_query.orm_get_list_of_category(session)

    for user in users_chat_id:
        message = ""
        subscriptions = await db_query.orm_get_users_categories(session, int(user))
        for subscription in subscriptions:
            message += "\n*–í–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ '{}'* \n".format(category[int(subscription)])
            for news in latest_news[int(subscription)]:
                message += f"\n{news.title}: {news.url}\n"

        await msg.answer(message, parse_mode=ParseMode.MARKDOWN)


@user_private_router.callback_query(F.data.startswith('print_help'))
async def print_help(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å" —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –í—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É –æ –±–æ—Ç–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer("""–¢—É—Ç –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ, –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö, –æ –¥–∞–π–¥–∂–µ—Å—Ç–µ –∏ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è""")


@user_private_router.callback_query(F.data.startswith('choose_category'))
async def category_hadnler(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é". –í—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:",
                                  reply_markup=reply.categories_kb)


@user_private_router.callback_query(F.data.startswith('subscribe_finish'))
async def subscribe_finish(callback: CallbackQuery,
                           session: AsyncSession,
                           apscheduler: AsyncIOScheduler,
                           bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "finish". –£–±–∏—Ä–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
    - apscheduler (AsyncIOScheduler): Scheduler –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞.
    - bot (Bot): –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Bot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer(text='–ü–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
    apscheduler.add_job(send_message_time,
                        trigger='cron',
                        hour=16,
                        kwargs={'bot': bot, 'session': session})


@user_private_router.callback_query(F.data.startswith('subscribe_'))
async def subscribe_topic(callback: CallbackQuery, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π. –£–±–∏—Ä–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    topic = callback.data.split("_")[-1]

    curr = await db_query.orm_get_id_category_by_name(session, topic)
    await db_query.orm_add_users_category(session, callback.from_user.id, curr)


@user_private_router.callback_query(F.data.startswith('restart_no'))
async def restart_no(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–µ—Ç' –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –£–¥–∞–ª—è–µ—Ç
    –≤—ã–≤–µ–¥–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø–æ–¥–ø–∏—Å—å –∫ –Ω–µ–π.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await callback.message.edit_reply_markup()
    await callback.message.delete()


@user_private_router.callback_query(F.data.startswith('restart_yes'))
async def restart_yes(callback: CallbackQuery, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–∞' –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –£–¥–∞–ª—è–µ—Ç
    –≤—ã–≤–µ–¥–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø–æ–¥–ø–∏—Å—å –∫ –Ω–µ–π, —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–Ω–æ—Å–∏—Ç –Ω–æ–≤—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - callback (CallbackQuery): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    await callback.message.edit_reply_markup()
    await db_query.orm_delete_users_category(session, callback.from_user.id)
    await callback.message.answer("–í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É–¥–∞–ª–µ–Ω—ã!")
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:",
                                  reply_markup=reply.categories_kb)


async def send_message_time(bot: Bot, session: AsyncSession) -> None:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –¥–∞–π–¥–∂–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - bot (Bot): –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    - session (AsyncSession): –°–µ—Å—Å–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - None
    """
    users_chat_id = await db_query.orm_get_list_of_users(session)
    latest_news = await db_query.orm_get_latest_news_by_categories(session)
    category = await db_query.orm_get_list_of_category(session)

    for user in users_chat_id:
        message = ""
        subscriptions = await db_query.orm_get_users_categories(session, int(user))
        for subscription in subscriptions:
            message += "\n*–í–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ '{}'* \n".format(category[int(subscription)])
            for news in latest_news[int(subscription)]:
                message += f"{news.title}: {news.url}\n"

        await bot.send_message(chat_id=user, text=message, parse_mode=ParseMode.MARKDOWN)
