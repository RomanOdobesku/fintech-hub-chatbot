from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.utils.formatting import Bold, as_list, as_marked_section
from sqlalchemy.ext.asyncio import AsyncSession
import bot_database.db_query as db_query
from kb import reply

user_private_router = Router()


@user_private_router.message(Command("start"))
async def start_handler(msg: Message, session: AsyncSession) -> None:
    await msg.answer("""–ü—Ä–∏–≤–µ—Ç üëª, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ä–∞–∑–Ω—ã–º–∏ —Ç–µ–º–∞–º –≤ —Ñ–∏–Ω—Ç–µ—Ö-—Å—Ñ–µ—Ä–µ! –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏ —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!""",
                     reply_markup=reply.start_kb)
    await db_query.orm_add_user(session, msg.from_user.id, msg.from_user.first_name)


@user_private_router.message(Command("restart"))
async def restart(msg: Message) -> None:
    await msg.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏?",
                     reply_markup=reply.restart_categories_kb)


@user_private_router.message(Command("my_categories"))
async def print_categories(msg: Message, session: AsyncSession) -> None:
    users_id = msg.from_user.id
    print("–¢–£–¢", users_id)
    cats = await db_query.orm_get_users_categories(session, users_id)
    names = [await db_query.orm_get_name_category_from_id(session, element) for element in cats]
    answer_message = "–í–∞—à —Å–ø–∏—Å–æ–∫ —Ç–µ–º:\n"
    for element in names:
        answer_message += f"- {element}\n"
    await msg.answer(answer_message)


@user_private_router.message(Command("help"))
async def help_handler(msg: Message) -> None:
    await msg.answer("""–¢—É—Ç –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ, –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö, –æ –¥–∞–π–¥–∂–µ—Å—Ç–µ –∏ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è""")


@user_private_router.callback_query(F.data.startswith('print_help'))
async def print_help(callback: CallbackQuery):
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer("""–¢—É—Ç –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ, –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö, –æ –¥–∞–π–¥–∂–µ—Å—Ç–µ –∏ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è""")


@user_private_router.callback_query(F.data.startswith('choose_category'))
async def category_hadnler(callback: CallbackQuery) -> None:
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:", reply_markup=reply.categories_kb)


@user_private_router.callback_query(F.data.startswith('subscribe_finish'))
async def subscribe_finish(callback: CallbackQuery):
    await callback.message.edit_reply_markup()
    await callback.message.delete()
    await callback.message.answer(text='–ü–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')


@user_private_router.callback_query(F.data.startswith('subscribe_'))
async def subscribe_topic(callback: CallbackQuery, session: AsyncSession):
    topic = callback.data.split("_")[-1]

    if topic != 'finish':
        curr = await db_query.orm_get_categories_from_name(session, topic)
        await db_query.orm_add_users_category(session, callback.from_user.id, curr)
    else:
        callback.answer("–ü–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!", reply_markup=ReplyKeyboardRemove)


@user_private_router.callback_query(F.data.startswith('restart_no'))
async def restart_no(callback: CallbackQuery):
    await callback.message.edit_reply_markup()
    await callback.message.delete()


@user_private_router.callback_query(F.data.startswith('restart_yes'))
async def restart_yes(callback: CallbackQuery, session: AsyncSession):
    await callback.message.edit_reply_markup()
    await db_query.orm_delete_users_category(session, callback.from_user.id)
    await callback.message.answer("–í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É–¥–∞–ª–µ–Ω—ã!")
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:", reply_markup=reply.categories_kb)

